services:

    postgres:
        image: postgres
        container_name: postgres
        expose:
            - "5432"
        volumes:
            - db-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_PASSWORD=${DB_PASS}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_DB=${DB_NAME}
        networks:
            - pong-network
        restart: on-failure
        healthcheck:
          test: ["CMD-SHELL", "pg_isready", "-d", "${DB_NAME}"]
          interval: 30s
          timeout: 60s
          retries: 5
          start_period: 90s

    backend-django:
        build: ./backend
        image: backend-django
        container_name: backend-django
        expose:
            - "8000"
        environment:
            - DB_PASS=${DB_PASS}
            - DB_USER=${DB_USER}
            - DB_NAME=${DB_NAME}
            - DB_HOST=postgres
            - DB_PORT=5432
            - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
            - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
            - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
        networks:
            - pong-network
        restart: on-failure
        depends_on:
          postgres:
            condition: service_healthy

    nginx-server:
        build: ./frontend
        image: nginx-server
        container_name: nginx-server
        # ports:
        #     - 8080:80
        expose:
            - "80"
        environment:
            - NGINX_HOST=127.0.0.1
            - NGINX_PORT=80
            - DOMAIN=${DOMAIN}
        networks:
            - pong-network
        restart: on-failure

    reverse-proxy:
        build: ./reverse_proxy
        image: reverse-proxy
        container_name: reverse-proxy
        ports:
            - "8443:443"
        environment:
            - NGINX_HOST=127.0.0.1
            - DOMAIN=${DOMAIN}
        networks:
            - pong-network
        restart: on-failure

    pgadmin4:
        image: dpage/pgadmin4
        container_name: pgadmin4
        ports:
            - "3000:80"
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
            - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASS}
        networks:
            - pong-network
        restart: on-failure

networks:
    pong-network:
        name: pong-network

volumes:
    db-data:
        name: blitzpong_database
